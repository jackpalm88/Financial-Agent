name: CI/CD Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: build (pull_request)
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Upgrade pip tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel setuptools

      - name: Build sdist & wheel (legacy, no PEP517)
        run: |
          python setup.py sdist bdist_wheel
          ls -l dist

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  test_311:
    name: test (3.11) (pull_request)
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install (no isolation)
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e . --no-build-isolation
      - name: Run pytest
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        run: pytest -q

  test_312:
    name: test (3.12) (pull_request)
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install (no isolation)
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e . --no-build-isolation
      - name: Run pytest
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        run: pytest -q

  windows_test:
    name: windows-test (pull_request)
    runs-on: windows-latest
    if: always()
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install (no isolation)
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e . --no-build-isolation
      - name: Run pytest
        env:
          PYTHONPATH: ${{ github.workspace }}\\src
        run: pytest -q

  security:
    name: security (pull_request)
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v4
      - name: Lightweight security scan
        run: |
          echo "placeholder security scan OK"
